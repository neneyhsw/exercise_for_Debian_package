Description: Don't enable mouse mode by default, it breaks in chroots
Author: Adam Conrad <adconrad@ubuntu.com>,
	Steve Langasek <steve.langasek@ubuntu.com>
Bug-Ubuntu: https://launchpad.net/bugs/1661691
Last-Update: 2020-02-24

Index: vim-8.1.2269/runtime/defaults.vim
===================================================================
--- vim-8.1.2269.orig/runtime/defaults.vim
+++ vim-8.1.2269/runtime/defaults.vim
@@ -73,18 +73,6 @@
 " Revert with ":iunmap <C-U>".
 inoremap <C-U> <C-G>u<C-U>
 
-" In many terminal emulators the mouse works just fine.  By enabling it you
-" can position the cursor, Visually select and scroll with the mouse.
-" Only xterm can grab the mouse events when using the shift key, for other
-" terminals use ":", select text and press Esc.
-if has('mouse')
-  if &term =~ 'xterm'
-    set mouse=a
-  else
-    set mouse=nvi
-  endif
-endif
-
 " Switch syntax highlighting on when the terminal has colors or when using the
 " GUI (which always has colors).
 if &t_Co > 2 || has("gui_running")
Index: vim-8.1.2269/src/testdir/test_balloon.vim
===================================================================
--- vim-8.1.2269.orig/src/testdir/test_balloon.vim
+++ vim-8.1.2269/src/testdir/test_balloon.vim
@@ -9,6 +9,7 @@
 CheckScreendump
 
 let s:common_script =<< trim [CODE]
+  set mouse=a
   call setline(1, ["one one one", "two tXo two", "three three three"])
   set balloonevalterm balloonexpr=MyBalloonExpr() balloondelay=100
   func MyBalloonExpr()
Index: vim-8.1.2269/src/testdir/test_popupwin.vim
===================================================================
--- vim-8.1.2269.orig/src/testdir/test_popupwin.vim
+++ vim-8.1.2269/src/testdir/test_popupwin.vim
@@ -524,6 +524,7 @@
   " create a popup that covers the command line
   let lines =<< trim END
 	call setline(1, range(1, 20))
+        set mouse=a
 	split
 	vsplit
 	$wincmd w
@@ -566,6 +567,7 @@
 
   let lines =<< trim END
 	call setline(1, range(1, 20))
+        set mouse=a
 	" With border, can click on X
 	let winid = popup_create('foobar', #{
 	      \ close: 'button',
@@ -1301,6 +1303,7 @@
   let lines =<< trim END
 	call setline(1, range(1, 20))
 	call setline(5, 'here is some text to hover over')
+        set mouse=a
 	set balloonevalterm
 	set balloonexpr=BalloonExpr()
 	set balloondelay=100
@@ -1859,6 +1862,7 @@
 
   let lines =<< trim END
     call setline(1, range(1, 20))
+    set mouse=a
     hi ScrollThumb ctermbg=blue
     hi ScrollBar ctermbg=red
     let winid = popup_create(['one', 'two', 'three', 'four', 'five',
